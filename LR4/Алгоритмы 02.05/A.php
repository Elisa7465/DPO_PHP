<?php

// Считываем строку из консоли, убираем пробелы в начале и в конце
$input = trim(fgets(STDIN));

// Заранее известные допустимые протоколы
$protocols = ['http', 'https'];

// Заранее известные допустимые доменные зоны
$domains = ['ru', 'com'];

// Переменная для хранения "лучшего" восстановленного результата
$bestResult = null;

// Перебираем все возможные протоколы
foreach ($protocols as $protocol) {
    // Проверяем, начинается ли строка с текущего протокола
    if (strpos($input, $protocol) !== 0) continue;

    // Сохраняем длину протокола
    $protocolLen = strlen($protocol);

    // Получаем остаток строки после протокола
    $rest = substr($input, $protocolLen);

    // Перебираем все возможные длины имени домена
    // Имя домена не может быть пустым, поэтому начинаем с 1
    for ($i = 1; $i < strlen($rest); $i++) {
        // Предполагаем, что домен — это первые $i символов остатка строки
        $host = substr($rest, 0, $i);

        // Перебираем все допустимые доменные зоны
        foreach ($domains as $zone) {
            $zoneLen = strlen($zone);

            // Проверяем, что после имени домена действительно идёт доменная зона
            if (substr($rest, $i, $zoneLen) === $zone) {

                // Остаток после доменной зоны — это контекст (путь), он может быть пустым
                $context = substr($rest, $i + $zoneLen);

                // Собираем ссылку в формате: протокол://домен.зона/контекст
                $url = $protocol . '://' . $host . '.' . $zone;

                // Добавляем контекст, только если он непустой
                if ($context !== '') {
                    $url .= '/' . $context;
                }

                // Проверяем, является ли текущая ссылка лучшей:
                // - приоритет у более длинного протокола
                // - при равных протоколах — меньшая длина хоста
                if (
                    $bestResult === null || // если результата ещё нет
                    strlen($protocol) > strlen($bestResult['protocol']) || // приоритет по длине протокола
                    (
                        strlen($protocol) === strlen($bestResult['protocol']) &&
                        strlen($host) < strlen($bestResult['host']) // при равной длине протокола — наименьший хост
                    )
                ) {
                    // Сохраняем текущую версию как лучший результат
                    $bestResult = [
                        'protocol' => $protocol,
                        'host' => $host,
                        'zone' => $zone,
                        'context' => $context,
                        'url' => $url
                    ];
                }
            }
        }
    }
}

// Выводим на экран лучшую восстановленную ссылку
echo $bestResult['url'] . PHP_EOL;
